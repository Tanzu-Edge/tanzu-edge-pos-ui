#@data/values
---
app:
  host: pos-ui.apps.edge.wrightcode.io # Ingress host for your app
  image: harbor.services.edge.wrightcode.io/tanzu-edge-pos/edge-pos-ui # image, includes your harbor domain and project
  configRepo: https://github.com/Tanzu-Edge/tanzu-edge-pos-ui-ops.git # your k8s config repo, you could just use mine
  codeRepo: https://github.com/Tanzu-Edge/tanzu-edge-pos-ui.git # your source code repo
  wavefront:
    applicationName: tanzu-edge-pos-ui # application name, which appears in Tanzu Observability Application Status dashboard. I used dpfeffer-petclinic
    uri: https://demo.wavefront.com # Your Tanzu Observability URI
    apiToken: 07087..... # Your Tanzu Obsevability Api Token
    deployEventName: tanzu-edge-pos-ui-deploy # Mine is dpfeffer-spring-petclinic-deploy, we don't want to conflict here
  tmc:
    workload-cluster: tanzu-serverless # Mine is dpfeffer-ironislands-vsphere
    shared-services-cluster: devlab # Mine is dpfeffer-stormsend-vsphere
    workspace: tanzu-edge # Mine is dpfeffer-petclinic
  tbs:
    namespace: default
  serverless: 'true'
  posBackend: 'http://pos-sender-service:8090/v1/api/checkout'
tbs:
  harborRepository: harbor.services.edge.wrightcode.io/tanzu-edge-pos  # where you want tbs images to be placed  
commonSecrets:
  harborDomain: harbor.services.edge.wrightcode.io
  harborUser: admin # Recommend creating a robot account in the harbor project you are pushing petclinic images too
  harborPassword: admin
  kubeconfigBuildServer: '{"apiVersion".....' # result when context set to where TBS runs : kubectl config view --flatten --minify | yq e - --tojson  --indent 0
  kubeconfigAppServer: # result when context set to where app  runs : kubectl config view --flatten --minify | yq e - --tojson  --indent 0
  kubernetesBuildServiceAccountToken: # base64 encoded token of service account used by concourse on build cluster
  kubernetesDeployServiceAccountToken: # base64 encoded token of service account used by concourse on deploy cluster
  kubernetesDeployCluster: edge-site1
  kubernetesBuildCluster: edge-dev
  concourseHelperImage: harbor.services.edge.wrightcode.io/concourse/concourse-helper # Your concourse helper image, explained in 08-petclinic-peipline.md
  concourseAlias: main # Your concourse alias
  concourseUri: https://concourse.services.edge.wrightcode.io # Your concourse URI
  concourseUser: admin
  concoursePassword: admin
  pivnetApiToken: # token from your account on network.pivotal.io
